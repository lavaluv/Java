package byr.lavaluv.Design;
/*
 * 开闭原则（Open Close Principle）:
 * 开闭原则就是说对扩展开放，对修改关闭。想要达到这样的效果，我们需要使用接口和抽象类.
 * 
 * 里氏代换原则:
 * 只有当衍生类可以替换掉基类，软件单位的功能不受到影响时，基类才能真正被复用，而衍生类也能够在基类的基础上增加新的行为。
 * 
 * 依赖倒转原则:
 * 这个是开闭原则的基础，具体内容：真对接口编程，依赖于抽象而不依赖于具体。
 * 
 * 接口隔离原则:
 * 使用多个隔离的接口，比使用单个接口要好。
 * 
 * 迪米特法则（最少知道原则）:
 * 一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。
 * 
 * 合成复用原则:
 * 原则是尽量使用合成/聚合的方式，而不是使用继承。
 */
public class Principle {

}
